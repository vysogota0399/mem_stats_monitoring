// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package clients

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonF860cb9bEncodeGithubComVysogota0399MemStatsMonitoringInternalAgentClients2(out *jwriter.Writer, in MetricsBodyAlias) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Delta != 0 {
		const prefix string = ",\"delta\":"
		first = false
		out.RawString(prefix[1:])
		out.Int(int(in.Delta))
	}
	if in.Value != 0 {
		const prefix string = ",\"value\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Float64(float64(in.Value))
	}
	{
		const prefix string = ",\"id\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.MName))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.MType))
	}
	out.RawByte('}')
}
// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MetricsBodyAlias) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF860cb9bEncodeGithubComVysogota0399MemStatsMonitoringInternalAgentClients2(w, v)
}


