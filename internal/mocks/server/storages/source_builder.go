// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vysogota0399/mem_stats_monitoring/internal/server/storages (interfaces: SourceBuilder)

// Package mocks is a generated GoMock package.
package storages

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	config "github.com/vysogota0399/mem_stats_monitoring/internal/server/config"
)

// MockSourceBuilder is a mock of SourceBuilder interface.
type MockSourceBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockSourceBuilderMockRecorder
}

// MockSourceBuilderMockRecorder is the mock recorder for MockSourceBuilder.
type MockSourceBuilderMockRecorder struct {
	mock *MockSourceBuilder
}

// NewMockSourceBuilder creates a new mock instance.
func NewMockSourceBuilder(ctrl *gomock.Controller) *MockSourceBuilder {
	mock := &MockSourceBuilder{ctrl: ctrl}
	mock.recorder = &MockSourceBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSourceBuilder) EXPECT() *MockSourceBuilderMockRecorder {
	return m.recorder
}

// Source mocks base method.
func (m *MockSourceBuilder) Source(arg0 *config.Config) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Source", arg0)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Source indicates an expected call of Source.
func (mr *MockSourceBuilderMockRecorder) Source(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Source", reflect.TypeOf((*MockSourceBuilder)(nil).Source), arg0)
}
