// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vysogota0399/mem_stats_monitoring/internal/server/handlers (interfaces: IUpdateRestMetricService)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	service "github.com/vysogota0399/mem_stats_monitoring/internal/server/service"
)

// MockIUpdateRestMetricService is a mock of IUpdateRestMetricService interface.
type MockIUpdateRestMetricService struct {
	ctrl     *gomock.Controller
	recorder *MockIUpdateRestMetricServiceMockRecorder
}

// MockIUpdateRestMetricServiceMockRecorder is the mock recorder for MockIUpdateRestMetricService.
type MockIUpdateRestMetricServiceMockRecorder struct {
	mock *MockIUpdateRestMetricService
}

// NewMockIUpdateRestMetricService creates a new mock instance.
func NewMockIUpdateRestMetricService(ctrl *gomock.Controller) *MockIUpdateRestMetricService {
	mock := &MockIUpdateRestMetricService{ctrl: ctrl}
	mock.recorder = &MockIUpdateRestMetricServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUpdateRestMetricService) EXPECT() *MockIUpdateRestMetricServiceMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockIUpdateRestMetricService) Call(arg0 context.Context, arg1 service.UpdateMetricServiceParams) (service.UpdateMetricServiceResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Call", arg0, arg1)
	ret0, _ := ret[0].(service.UpdateMetricServiceResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Call indicates an expected call of Call.
func (mr *MockIUpdateRestMetricServiceMockRecorder) Call(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockIUpdateRestMetricService)(nil).Call), arg0, arg1)
} 