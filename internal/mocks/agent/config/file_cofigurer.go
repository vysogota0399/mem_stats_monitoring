// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vysogota0399/mem_stats_monitoring/internal/agent/config (interfaces: FileConfigurer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	config "github.com/vysogota0399/mem_stats_monitoring/internal/agent/config"
)

// MockFileConfigurer is a mock of FileConfigurer interface.
type MockFileConfigurer struct {
	ctrl     *gomock.Controller
	recorder *MockFileConfigurerMockRecorder
}

// MockFileConfigurerMockRecorder is the mock recorder for MockFileConfigurer.
type MockFileConfigurerMockRecorder struct {
	mock *MockFileConfigurer
}

// NewMockFileConfigurer creates a new mock instance.
func NewMockFileConfigurer(ctrl *gomock.Controller) *MockFileConfigurer {
	mock := &MockFileConfigurer{ctrl: ctrl}
	mock.recorder = &MockFileConfigurerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileConfigurer) EXPECT() *MockFileConfigurerMockRecorder {
	return m.recorder
}

// Configure mocks base method.
func (m *MockFileConfigurer) Configure(arg0 *config.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Configure", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Configure indicates an expected call of Configure.
func (mr *MockFileConfigurerMockRecorder) Configure(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Configure", reflect.TypeOf((*MockFileConfigurer)(nil).Configure), arg0)
}
